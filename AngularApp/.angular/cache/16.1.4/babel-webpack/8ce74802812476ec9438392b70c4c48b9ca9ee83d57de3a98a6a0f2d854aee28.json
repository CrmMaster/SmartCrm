{"ast":null,"code":"/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n/**\r\n * Applies CSS prefixes to appropriate style keys.\r\n *\r\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\r\n *    {\r\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\r\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\r\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\r\n *      // display: -ms-flexbox;   TWEENER - IE 10\r\n *      // display: -moz-flexbox;  OLD - Firefox\r\n *    }\r\n */\nfunction applyCssPrefixes(target) {\n  for (let key in target) {\n    let value = target[key] ?? '';\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = ['-webkit-flex', 'flex'];\n        } else if (value === 'inline-flex') {\n          target['display'] = ['-webkit-inline-flex', 'inline-flex'];\n        } else {\n          target['display'] = value;\n        }\n        break;\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n      case 'flex-direction':\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\nconst INLINE = 'inline';\nconst LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n/**\r\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\r\n */\nfunction buildLayoutCSS(value) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n}\n/**\r\n  * Validate the value to be one of the acceptable value options\r\n  * Use default fallback of 'row'\r\n  */\nfunction validateValue(value) {\n  value = value?.toLowerCase() ?? '';\n  let [direction, wrap, inline] = value.split(' ');\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n  if (wrap === INLINE) {\n    wrap = inline !== INLINE ? inline : '';\n    inline = INLINE;\n  }\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n/**\r\n * Determine if the validated, flex-direction value specifies\r\n * a horizontal/row flow.\r\n */\nfunction isFlowHorizontal(value) {\n  let [flow] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n/**\r\n * Convert layout-wrap='<value>' to expected flex-wrap style\r\n */\nfunction validateWrapValue(value) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n/**\r\n * Build the CSS that should be assigned to the element instance\r\n * BUG:\r\n *   1) min-height on a column flex container wonâ€™t apply to its flex item children in IE 10-11.\r\n *      Use height instead if possible; height : <xxx>vh;\r\n *\r\n *  This way any padding or border specified on the child elements are\r\n *  laid out and drawn inside that element's specified width and height.\r\n */\nfunction buildCSS(direction, wrap = null, inline = false) {\n  return {\n    display: inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': wrap || null\n  };\n}\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n/**\r\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\r\n * similar to Object.assign.\r\n *\r\n * @param dest The object which will have properties copied to it.\r\n * @param sources The source objects from which properties will be copied.\r\n */\nfunction extendObject(dest, ...sources) {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n  return dest;\n}\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { INLINE, LAYOUT_VALUES, applyCssPrefixes, buildLayoutCSS, extendObject, isFlowHorizontal, validateValue, validateWrapValue };","map":{"version":3,"names":["applyCssPrefixes","target","key","value","isNaN","INLINE","LAYOUT_VALUES","buildLayoutCSS","direction","wrap","isInline","validateValue","buildCSS","toLowerCase","inline","split","find","x","validateWrapValue","isFlowHorizontal","flow","indexOf","display","extendObject","dest","sources","TypeError","source","hasOwnProperty"],"sources":["C:/Users/Jhow/Desktop/SmartCrm/angularApp/node_modules/@angular/flex-layout/fesm2020/angular-flex-layout-_private-utils.mjs"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Applies CSS prefixes to appropriate style keys.\r\n *\r\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\r\n *    {\r\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\r\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\r\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\r\n *      // display: -ms-flexbox;   TWEENER - IE 10\r\n *      // display: -moz-flexbox;  OLD - Firefox\r\n *    }\r\n */\r\nfunction applyCssPrefixes(target) {\r\n    for (let key in target) {\r\n        let value = target[key] ?? '';\r\n        switch (key) {\r\n            case 'display':\r\n                if (value === 'flex') {\r\n                    target['display'] = [\r\n                        '-webkit-flex',\r\n                        'flex'\r\n                    ];\r\n                }\r\n                else if (value === 'inline-flex') {\r\n                    target['display'] = [\r\n                        '-webkit-inline-flex',\r\n                        'inline-flex'\r\n                    ];\r\n                }\r\n                else {\r\n                    target['display'] = value;\r\n                }\r\n                break;\r\n            case 'align-items':\r\n            case 'align-self':\r\n            case 'align-content':\r\n            case 'flex':\r\n            case 'flex-basis':\r\n            case 'flex-flow':\r\n            case 'flex-grow':\r\n            case 'flex-shrink':\r\n            case 'flex-wrap':\r\n            case 'justify-content':\r\n                target['-webkit-' + key] = value;\r\n                break;\r\n            case 'flex-direction':\r\n                target['-webkit-flex-direction'] = value;\r\n                target['flex-direction'] = value;\r\n                break;\r\n            case 'order':\r\n                target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\r\n                break;\r\n        }\r\n    }\r\n    return target;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nconst INLINE = 'inline';\r\nconst LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\r\n/**\r\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\r\n */\r\nfunction buildLayoutCSS(value) {\r\n    let [direction, wrap, isInline] = validateValue(value);\r\n    return buildCSS(direction, wrap, isInline);\r\n}\r\n/**\r\n  * Validate the value to be one of the acceptable value options\r\n  * Use default fallback of 'row'\r\n  */\r\nfunction validateValue(value) {\r\n    value = value?.toLowerCase() ?? '';\r\n    let [direction, wrap, inline] = value.split(' ');\r\n    // First value must be the `flex-direction`\r\n    if (!LAYOUT_VALUES.find(x => x === direction)) {\r\n        direction = LAYOUT_VALUES[0];\r\n    }\r\n    if (wrap === INLINE) {\r\n        wrap = (inline !== INLINE) ? inline : '';\r\n        inline = INLINE;\r\n    }\r\n    return [direction, validateWrapValue(wrap), !!inline];\r\n}\r\n/**\r\n * Determine if the validated, flex-direction value specifies\r\n * a horizontal/row flow.\r\n */\r\nfunction isFlowHorizontal(value) {\r\n    let [flow,] = validateValue(value);\r\n    return flow.indexOf('row') > -1;\r\n}\r\n/**\r\n * Convert layout-wrap='<value>' to expected flex-wrap style\r\n */\r\nfunction validateWrapValue(value) {\r\n    if (!!value) {\r\n        switch (value.toLowerCase()) {\r\n            case 'reverse':\r\n            case 'wrap-reverse':\r\n            case 'reverse-wrap':\r\n                value = 'wrap-reverse';\r\n                break;\r\n            case 'no':\r\n            case 'none':\r\n            case 'nowrap':\r\n                value = 'nowrap';\r\n                break;\r\n            // All other values fallback to 'wrap'\r\n            default:\r\n                value = 'wrap';\r\n                break;\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Build the CSS that should be assigned to the element instance\r\n * BUG:\r\n *   1) min-height on a column flex container wonâ€™t apply to its flex item children in IE 10-11.\r\n *      Use height instead if possible; height : <xxx>vh;\r\n *\r\n *  This way any padding or border specified on the child elements are\r\n *  laid out and drawn inside that element's specified width and height.\r\n */\r\nfunction buildCSS(direction, wrap = null, inline = false) {\r\n    return {\r\n        display: inline ? 'inline-flex' : 'flex',\r\n        'box-sizing': 'border-box',\r\n        'flex-direction': direction,\r\n        'flex-wrap': wrap || null,\r\n    };\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\r\n * similar to Object.assign.\r\n *\r\n * @param dest The object which will have properties copied to it.\r\n * @param sources The source objects from which properties will be copied.\r\n */\r\nfunction extendObject(dest, ...sources) {\r\n    if (dest == null) {\r\n        throw TypeError('Cannot convert undefined or null to object');\r\n    }\r\n    for (let source of sources) {\r\n        if (source != null) {\r\n            for (let key in source) {\r\n                if (source.hasOwnProperty(key)) {\r\n                    dest[key] = source[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return dest;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { INLINE, LAYOUT_VALUES, applyCssPrefixes, buildLayoutCSS, extendObject, isFlowHorizontal, validateValue, validateWrapValue };\r\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}